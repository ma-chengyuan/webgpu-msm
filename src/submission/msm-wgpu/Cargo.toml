[package]
name = "msm-wgpu"
version = "0.1.0"
authors = ["Chengyuan Ma <chengyuanma@protonmail.com>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
ark-ff = "0.4.2"
ark-ec = "0.4.2"
ark-ed-on-bls12-377 = "0.4.0"
msm-split = { path = "../msm-split" }
wgpu = "0.19.0"
log = "0.4"
bytemuck = "1.14"
flume = "0.11.0"
futures = "0.3"
serde = { version = "1.0", features = ["derive"] }
static_assertions = "1.1"
rayon = "1.8"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.84"
wasm-bindgen-futures = "0.4"
wasm-bindgen-rayon = "1.2"
serde-wasm-bindgen = "0.4"
console_log = "1.0"
js-sys = "0.3"
web-sys = { version = "0.3.67", features = [
    "console",
    "Document",
    "Window",
    "Element",
] }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
# opt-level = "s"
debug = true
